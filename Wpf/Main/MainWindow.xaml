<controls:MetroWindow x:Class="Wpf.Main.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:geared="clr-namespace:LiveCharts.Geared;assembly=LiveCharts.Geared"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:main="clr-namespace:Wpf.Main"
        mc:Ignorable="d"
        Title="LiveCharts Geared" Height="650" Width="1000"
                      WindowStartupLocation="CenterScreen"
                      WindowTitleBrush="#252526"
                      NonActiveWindowTitleBrush="#252526"
                      TitleCharacterCasing="Normal"
                      GlowBrush="#9D9D9D"
                      BorderThickness="0">
    <controls:MetroWindow.Resources>
        <ObjectDataProvider MethodName="GetValues"
        ObjectType="{x:Type sys:Enum}"
        x:Key="Q">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="geared:Quality" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.DataContext>
        <main:MainWindowVm></main:MainWindowVm>
    </controls:MetroWindow.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid Width="300" HorizontalAlignment="Left"
              Background="#10ffffff">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" TextWrapping="Wrap" Margin="10">
                The geared package is also customizable according to your needs,
                you must find the balance between Points-Animations-Quality
                for your case, performance might also vary according to your chart size,
                the smaller the faster.
                <LineBreak />
                <LineBreak />
                Select the number of points, Quality and Disable/Enable animations, then click Go to render the chart.
                <LineBreak/>
                <LineBreak/>
                Find more information 
                <Hyperlink NavigateUri="https://lvcharts.net/App/examples/v1/wpf/geared" 
                           RequestNavigate="Hyperlink_RequestNavigate">
                here
                </Hyperlink>
                <LineBreak/>
                <LineBreak/>
                Use your mouse wheel to zoom in/out, click, hold and drag for panning
            </TextBlock>
            <Separator Grid.Row="1" Margin="0 10"></Separator>
            <TextBlock Grid.Row="2" Margin="10" Text="{Binding Points, StringFormat=Number of Points {0:N0}, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
            <Slider Grid.Row="3" Minimum="10" Maximum="10000000" Margin="10" Value="{Binding Points, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></Slider>
            <Separator Grid.Row="4" Margin="0 10"></Separator>
            <TextBlock Grid.Row="5" Margin="10">Quality</TextBlock>
            <ComboBox Grid.Row="6" Margin="10" ItemsSource="{Binding Source={StaticResource Q}}" SelectedItem="{Binding Quality}"></ComboBox>
            
            <StackPanel Grid.Row="7" Orientation="Horizontal" Margin="10">
                <CheckBox Checked="Animated_OnChecked" Name="Animated" IsChecked="True"></CheckBox>
                <TextBlock>Disable Animations</TextBlock>
            </StackPanel>
            
            <Button Grid.Row="8" Margin="10" Click="GoOnClick" Height="50" Background="#2895D2">
                Go
            </Button>
            <Button Grid.Row="9" Margin="10" Click="MoreOnClick" Height="50" Background="#2895D2">
                See more examples
            </Button>
        </Grid>
        <lvc:CartesianChart Grid.Column="1" Margin="10" Zoom="X" 
                            Series="{Binding SeriesCollection}" 
                            DisableAnimations="{Binding ElementName=Animated, Path=IsChecked}">
            <lvc:CartesianChart.AxisX>
                <lvc:Axis MinValue="{Binding Min, Mode=TwoWay}" MaxValue="{Binding Max, Mode=TwoWay}"
                          MinRange="10" MaxRange="{Binding Points}" Separator="{x:Static lvc:DefaultAxes.CleanSeparator}">
                </lvc:Axis>
            </lvc:CartesianChart.AxisX>
            <lvc:CartesianChart.AxisY>
                <lvc:Axis>
                    <lvc:Axis.Separator>
                        <lvc:Separator StrokeDashArray="2" StrokeThickness="2" Stroke="#505050"></lvc:Separator>
                    </lvc:Axis.Separator>
                </lvc:Axis>
            </lvc:CartesianChart.AxisY>
        </lvc:CartesianChart>
    </Grid>
</controls:MetroWindow>















